{"version":3,"sources":["components/Header.tsx","context/AppReducer.tsx","context/GlobalState.tsx","components/Balance.tsx","components/IncomeExpense.tsx","components/TransactionItem.tsx","components/History.tsx","components/Transaction.tsx","App.tsx","index.tsx","swDev.js"],"names":["Header","state","action","type","trans","id","transactions","length","payload","filter","item","initialState","deleteTransaction","addTransaction","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","text","amount","Balance","total","useContext","map","reduce","acc","toFixed","IncomeExpense","amounts","income","expense","className","TransactionItem","onClick","Math","abs","History","key","Transaction","useState","setText","setAmount","onChange","e","target","name","placeholder","parseInt","preventDefault","Number","handleSubmit","App","ReactDOM","render","StrictMode","document","getElementById","swUrl","process","navigator","serviceWorker","register","then","resp","console","warn","swDev"],"mappings":"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","file":"static/js/main.4c72749a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return ( \r\n        <h2>Expense Tracker</h2>\r\n     );\r\n}\r\n \r\nexport default Header;","export default (state:any,action:any)=>{\r\n    switch(action.type){\r\n        case 'ADD_TRANSACTION':\r\n            const trans={\r\n                id:(state.transactions.length+1),\r\n                ...action.payload}\r\n            return {\r\n                ...state,\r\n                transactions:[\r\n                    ...state.transactions,\r\n                    trans\r\n                ]\r\n            };\r\n\r\n        case 'REMOVE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions:state.transactions.filter((item:any)=>item.id!==action.payload)\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React,{createContext,useReducer} from 'react'\r\nimport AppReducer from './AppReducer';\r\n\r\nexport type transactionType={\r\n    id:any,\r\n    text:string,\r\n    amount:number\r\n}\r\n\r\ntype stateType={\r\n    transactions:transactionType[],\r\n    deleteTransaction:any,\r\n    addTransaction:any\r\n}\r\n\r\nconst initialState:stateType={\r\n    transactions:[],\r\n    deleteTransaction:null,\r\n    addTransaction:null,\r\n}\r\n\r\n\r\nexport const GlobalContext=createContext(initialState);\r\n\r\nexport const GlobalProvider=({children}:{children:any})=>{\r\n    const [state,dispatch]=useReducer(AppReducer,initialState)\r\n\r\n    const deleteTransaction=(id:any)=>{\r\n        dispatch({\r\n            type:'REMOVE_TRANSACTION',\r\n            payload:id\r\n        })\r\n    }\r\n\r\n    const addTransaction=(text:string,amount:string)=>{\r\n        dispatch({\r\n            type:'ADD_TRANSACTION',\r\n            payload:{\r\n                text,\r\n                amount\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider \r\n            value={{\r\n                transactions:state.transactions,\r\n                deleteTransaction,\r\n                addTransaction\r\n            }}>\r\n                {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n\r\n}","import React,{useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\n\r\nconst Balance=()=>{\r\n    const {transactions}=useContext(GlobalContext);\r\n    const amounts=transactions.map(trans=>trans.amount)\r\n    const total=amounts.reduce((acc,item)=>(acc+=item),0).toFixed(2);\r\n\r\n    return ( \r\n        <div>\r\n        <h4>Your Balance</h4>\r\n        <h1>${total}</h1>\r\n        </div>\r\n     );\r\n\r\n}\r\n\r\nexport default Balance;","import React,{useContext} from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\n\r\nconst IncomeExpense=()=>{\r\n    const {transactions}=useContext(GlobalContext);\r\n\r\n    const amounts=transactions.map(trans=>trans.amount);\r\n    const income=amounts.filter(item=>item>0).reduce((acc,item)=>(acc+=item),0).toFixed(2);\r\n    const expense=amounts.filter(item=>item<0).reduce((acc,item)=>(acc+=item),0).toFixed(2);\r\n\r\n    return ( \r\n        <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Income</h4>\r\n          <p id=\"money-plus\" className=\"money plus\">+${income}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n             <p id=\"money-minus\" className=\"money minus\">-${expense}</p>\r\n        </div>\r\n      </div>\r\n     );\r\n}\r\n\r\nexport default IncomeExpense;","import React,{useContext} from 'react'\r\nimport { GlobalContext } from './../context/GlobalState';\r\nimport {transactionType} from '../context/GlobalState';\r\n\r\nconst TransactionItem =({trans}:{trans:transactionType})=>{\r\n    const {deleteTransaction}=useContext(GlobalContext);\r\n\r\n    return(\r\n        <li className={trans.amount>0?\"plus\":\"minus\"} onClick={()=>deleteTransaction(trans.id)}>{trans.text} <span>{trans.amount<0?\"-\":\"+\"}${Math.abs(trans.amount)}</span></li>\r\n    )\r\n\r\n}\r\n\r\nexport default TransactionItem;","import React,{useContext} from 'react'\r\nimport { GlobalContext } from './../context/GlobalState';\r\nimport TransactionItem from './TransactionItem';\r\n\r\nconst History=()=>{\r\n    const {transactions}=useContext(GlobalContext);\r\n\r\n    return(\r\n        <div>\r\n            <h4>History</h4>\r\n            <ul className='list'>\r\n                {transactions.map(trans=><TransactionItem key={trans.id} trans={trans} />)}\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default History;","import React,{useState,useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nconst Transaction = () => {\r\n    const [text,setText]=useState<string>();\r\n    const [amount,setAmount]=useState<number>();\r\n    const {addTransaction}=useContext(GlobalContext);\r\n\r\n    const handleSubmit=(text:string|undefined,amount:number|undefined)=>{\r\n        if(text===\"\")\r\n        return;\r\n        if(amount===0)\r\n        return;\r\n        addTransaction(text,Number(amount));\r\n        setText(\"\");\r\n        setAmount(0);\r\n    }\r\n    return ( \r\n        <div>\r\n            <h3>Add new Transaction</h3>\r\n            <form>\r\n                <div className=\"form-control\">\r\n                    <label>Text</label>\r\n                    <input onChange={(e)=>setText(e.target.value)} type='text' className='form-control' name='text' placeholder='Detail' value={text}/>\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label>Amount<br/>(negative - expense, positive - income)</label>\r\n                    <input onChange={(e)=>setAmount(parseInt(e.target.value))} type='number' className='form-control' name='amount' placeholder='Amount' value={amount}/>\r\n                </div>\r\n                <button className='btn' onClick={(e)=>{e.preventDefault();handleSubmit(text,amount);}}>Add Transaction</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Transaction;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Balance from './components/Balance';\nimport IncomeExpense from './components/IncomeExpense';\nimport History from './components/History';\nimport Transaction from './components/Transaction';\nimport {GlobalProvider} from './context/GlobalState';\n\nfunction App() {\n  return (\n    <div>\n      <GlobalProvider>\n      <Header />\n      <div className='container'>\n        <Balance />\n        <IncomeExpense />\n        <History />\n        <Transaction />\n      </div>\n      </GlobalProvider> \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport swDev from './swDev';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\nswDev();\n","export default function swDev(){\r\n    const swUrl=`${process.env.PUBLIC_URL}/expense-tracker-sw.js`;\r\n    navigator.serviceWorker.register(swUrl)\r\n    .then((resp)=>{\r\n        console.warn(resp);\r\n    });\r\n\r\n}"],"sourceRoot":""}